<?php

/**
 * Package Name: Stripe Pad
 * File Description: Experimental Class to generate code and fake db data
 * 
 * @author Beto Ayesa <beto.phpninja@gmail.com>
 * @version 1.0.0
 * @package StripePad
 * @license GPL3
 * @link https://github.com/natzar/stripe-pad
 * 
 *
 *  This program is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  This file is part of Stripe Pad.
 *
 *	Stripe Pad is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 *
 *	Stripe Pad is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License along with  Stripe Pad. If not, see <https://www.gnu.org/licenses/>.
 */

/*

Cart generated by ChatGPT
Idea is to store carts, so they are persistent or suitable for cart recovering
Links: Products Model, 
*/

// SQL
//  CREATE TABLE cart_items (
//     id INT AUTO_INCREMENT PRIMARY KEY,
//     user_id INT,
//     product_id INT,
//     quantity INT,
//     FOREIGN KEY (user_id) REFERENCES users(id),
//     FOREIGN KEY (product_id) REFERENCES products(id)
//     );
class Cart extends ModelBase
{
    // Display categories
    public function showCategories()
    {
        $categories = $this->db->query("SELECT * FROM categories");
        $this->views->show('custom/categories', ['categories' => $categories]);
    }

    // Display products by category
    public function showCategoryProducts($urlSlug)
    {
        $stmt = $this->db->prepare("SELECT p.* FROM products p JOIN categories c ON p.category_id = c.id WHERE c.url_slug = ?");
        $stmt->execute([$urlSlug]);
        $this->views->show('custom/category', ['products' => $stmt->fetchAll()]);
    }

    // Display individual product
    public function showProduct($productId)
    {
        $stmt = $this->db->prepare("SELECT * FROM products WHERE id = ?");
        $stmt->execute([$productId]);
        $this->views->show('custom/product', ['product' => $stmt->fetch()]);
    }

    // Add to cart
    public function addToCart($userId, $productId, $quantity)
    {
        $stmt = $this->db->prepare("INSERT INTO cart_items (user_id, product_id, quantity) VALUES (?, ?, ?) ON DUPLICATE KEY UPDATE quantity = quantity + ?");
        $stmt->execute([$userId, $productId, $quantity, $quantity]);
        $_SESSION['alerts'][] = "Product added to cart.";
        header('Location: /viewCart');
    }

    // View Cart
    public function viewCart($userId)
    {
        $stmt = $this->db->prepare("SELECT p.title, p.description, p.image_url, p.price, ci.quantity FROM cart_items ci JOIN products p ON ci.product_id = p.id WHERE ci.user_id = ?");
        $stmt->execute([$userId]);
        $this->views->show('custom/cart', ['cartItems' => $stmt->fetchAll()]);
    }

    // Update Cart Item Quantity
    public function updateCartItem($cartItemId, $quantity)
    {
        $stmt = $this->db->prepare("UPDATE cart_items SET quantity = ? WHERE id = ?");
        $stmt->execute([$quantity, $cartItemId]);
        $_SESSION['alerts'][] = "Cart updated.";
        header('Location: /viewCart');
    }

    // Remove Cart Item
    public function removeCartItem($cartItemId)
    {
        $stmt = $this->db->prepare("DELETE FROM cart_items WHERE id = ?");
        $stmt->execute([$cartItemId]);
        $_SESSION['alerts'][] = "Item removed from cart.";
        header('Location: /viewCart');
    }
}
